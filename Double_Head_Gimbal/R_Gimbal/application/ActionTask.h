#ifndef __ACTIONTASK_H__
#define __ACTIONTASK_H__

#include "main.h"

typedef enum
{
	INF_POWER_DOWN_MODE,
	INF_RC_CHASSIS_FOLLOW_MODE,
	INF_RC_CHASSIS_PROTECT_MODE,
	INF_RC_SHOOT_TEST_MODE,
	INF_PC_MODE,
	INF_MOUSEKEY_MODE,
	INF_NAV_PLUS_AIM_MODE
}GlOBAL_INF_MODE_ENUM;

typedef enum
{
	CHASSIS_POWER_DOWN_MODE = 0,
	CHASSIS_RC_FOLLOW_MODE = 1,
	CHASSIS_RC_PROTECT_MODE = 2,
	CHASSIS_MOUSEKEY_MODE = 5,
	CHASSIS_PC_MODE = 6
	
}CHASSIS_MODE_ENUM;

typedef enum
{
	GIMBAL_POWER_DOWN_MODE,
	GIMBAL_RC_TEST_MODE,
	GIMBAL_RC_ACT_MODE,
	GIMBAL_PC_TEST_MODE,
	GIMBAL_PC_ACT_MODE,
	GIMBAL_MOUSEKEY_MODE,
	GIMBAL_NAV_PLUS_AIM_MODE
//	GIMBAL_PC_TEST_MODE,
//	GIMBAL_PC_SHOOT_MODE
}GIMBAL_MODE_ENUM;

typedef enum
{
	SHOOT_POWER_DOWN_MODE,
	SHOOT_RC_TEST_MODE,
	SHOOT_RC_ACT_MODE,
	SHOOT_PC_TEST_MODE,
	SHOOT_PC_ACT_MODE,
	SHOOT_MOUSEKEY_MODE
}SHOOT_MODE_ENUM;

typedef struct
{
	GlOBAL_INF_MODE_ENUM Global_Mode;
	CHASSIS_MODE_ENUM Chassis_Mode;
	GIMBAL_MODE_ENUM Gimbal_Mode;
	SHOOT_MODE_ENUM Shoot_Mode;
}Inf_All_State_t;

extern Inf_All_State_t Inf_All_State;

void Action_Update_task(void *pvParameters);

#endif
